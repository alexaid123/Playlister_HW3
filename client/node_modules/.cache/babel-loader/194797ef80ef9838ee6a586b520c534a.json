{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\CSE 316\\\\Playlister_HW3\\\\myHW\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  let disabledButtonClass = \"playlister-button-disabled\"; //store.disableButton('add-song-button');\n  //store.disableButton(\"undo-button\");\n  //store.disableButton(\"redo-button\");\n  // store.disableButton(\"close-button\");\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleClose() {\n    store.disableButton('add-song-button');\n    store.disableButton('close-button');\n    store.disableButton('undo-button');\n    store.disableButton('redo-button');\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n\n  function handleAddSong() {\n    store.addAddSongTransaction();\n  }\n\n  let editStatus = false;\n\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: editStatus,\n      value: \"+\",\n      className: disabledButtonClass,\n      onClick: handleAddSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: editStatus,\n      value: \"\\u27F2\",\n      className: disabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatus,\n      value: \"\\u27F3\",\n      className: disabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: disabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","disabledButtonClass","handleUndo","undo","handleRedo","redo","handleClose","disableButton","push","closeCurrentList","handleAddSong","addAddSongTransaction","editStatus","isListNameEditActive"],"sources":["C:/Users/alexa/OneDrive/Desktop/CSE 316/Playlister_HW3/myHW/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n\r\n    let enabledButtonClass = \"playlister-button\";\r\n    let disabledButtonClass = \"playlister-button-disabled\";\r\n    //store.disableButton('add-song-button');\r\n    //store.disableButton(\"undo-button\");\r\n    //store.disableButton(\"redo-button\");\r\n   // store.disableButton(\"close-button\");\r\n\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    function handleClose() {\r\n        store.disableButton('add-song-button');\r\n        store.disableButton('close-button');\r\n        store.disableButton('undo-button');\r\n        store.disableButton('redo-button');\r\n\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n    } \r\n    function handleAddSong()\r\n    {\r\n            store.addAddSongTransaction();\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    return (\r\n        <span id=\"edit-toolbar\">\r\n            <input\r\n                type=\"button\"\r\n                id='add-song-button'\r\n                disabled={editStatus}\r\n                value=\"+\"\r\n                className={disabledButtonClass}\r\n                onClick={handleAddSong}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='undo-button'\r\n                disabled={editStatus}\r\n                value=\"⟲\"\r\n                className={disabledButtonClass}\r\n                onClick={handleUndo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='redo-button'\r\n                disabled={editStatus}\r\n                value=\"⟳\"\r\n                className={disabledButtonClass}\r\n                onClick={handleRedo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='close-button'\r\n                disabled={editStatus}\r\n                value=\"&#x2715;\"\r\n                className={disabledButtonClass}\r\n                onClick={handleClose}\r\n            />\r\n        </span>);\r\n}\r\n\r\nexport default EditToolbar;"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAYJ,UAAU,CAACC,kBAAD,CAA5B;EACA,MAAMI,OAAO,GAAGH,UAAU,EAA1B;EAEA,IAAII,kBAAkB,GAAG,mBAAzB;EACA,IAAIC,mBAAmB,GAAG,4BAA1B,CALmB,CAMnB;EACA;EACA;EACD;;EAEC,SAASC,UAAT,GAAsB;IAClBJ,KAAK,CAACK,IAAN;EACH;;EACD,SAASC,UAAT,GAAsB;IAClBN,KAAK,CAACO,IAAN;EACH;;EACD,SAASC,WAAT,GAAuB;IACnBR,KAAK,CAACS,aAAN,CAAoB,iBAApB;IACAT,KAAK,CAACS,aAAN,CAAoB,cAApB;IACAT,KAAK,CAACS,aAAN,CAAoB,aAApB;IACAT,KAAK,CAACS,aAAN,CAAoB,aAApB;IAEAR,OAAO,CAACS,IAAR,CAAa,GAAb;IACAV,KAAK,CAACW,gBAAN;EACH;;EACD,SAASC,aAAT,GACA;IACQZ,KAAK,CAACa,qBAAN;EACP;;EACD,IAAIC,UAAU,GAAG,KAAjB;;EACA,IAAId,KAAK,CAACe,oBAAV,EAAgC;IAC5BD,UAAU,GAAG,IAAb;EACH;;EACD,oBACI;IAAM,EAAE,EAAC,cAAT;IAAA,wBACI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,iBAFP;MAGI,QAAQ,EAAEA,UAHd;MAII,KAAK,EAAC,GAJV;MAKI,SAAS,EAAEX,mBALf;MAMI,OAAO,EAAES;IANb;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,aAFP;MAGI,QAAQ,EAAEE,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEX,mBALf;MAMI,OAAO,EAAEC;IANb;MAAA;MAAA;MAAA;IAAA,QATJ,eAiBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,aAFP;MAGI,QAAQ,EAAEU,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEX,mBALf;MAMI,OAAO,EAAEG;IANb;MAAA;MAAA;MAAA;IAAA,QAjBJ,eAyBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,cAFP;MAGI,QAAQ,EAAEQ,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEX,mBALf;MAMI,OAAO,EAAEK;IANb;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH;;GArEQT,W;UAEWD,U;;;KAFXC,W;AAuET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}