[{"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\index.js":"1","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\App.js":"2","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\reportWebVitals.js":"3","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\store\\index.js":"4","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\index.js":"5","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\common\\jsTPS.js":"6","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\api\\index.js":"7","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\Banner.js":"8","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditToolbar.js":"9","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\ListCard.js":"10","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\ListSelector.js":"11","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\Statusbar.js":"12","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteListModal.js":"13","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\SongCard.js":"14","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\AddSong_Transaction.js":"15","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\PlaylistCards.js":"16","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditSongModal.js":"17","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteSongModal.js":"18","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteSong_Transaction.js":"19","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditSong_Transaction.js":"20","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\MoveSong_Transaction.js":"21"},{"size":908,"mtime":1665452234091,"results":"22","hashOfConfig":"23"},{"size":1000,"mtime":1666029898154,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1665452234092,"results":"25","hashOfConfig":"23"},{"size":36698,"mtime":1666058959186,"results":"26","hashOfConfig":"23"},{"size":1203,"mtime":1665803678787,"results":"27","hashOfConfig":"23"},{"size":6687,"mtime":1665452234086,"results":"28","hashOfConfig":"23"},{"size":1654,"mtime":1665620497309,"results":"29","hashOfConfig":"23"},{"size":465,"mtime":1665452234087,"results":"30","hashOfConfig":"23"},{"size":2411,"mtime":1665806589234,"results":"31","hashOfConfig":"23"},{"size":4172,"mtime":1665806018369,"results":"32","hashOfConfig":"23"},{"size":1407,"mtime":1666057858056,"results":"33","hashOfConfig":"23"},{"size":487,"mtime":1665452234090,"results":"34","hashOfConfig":"23"},{"size":3330,"mtime":1665780213672,"results":"35","hashOfConfig":"23"},{"size":3321,"mtime":1665806123430,"results":"36","hashOfConfig":"23"},{"size":402,"mtime":1665855545380,"results":"37","hashOfConfig":"23"},{"size":1004,"mtime":1665891420889,"results":"38","hashOfConfig":"23"},{"size":3130,"mtime":1665806175529,"results":"39","hashOfConfig":"23"},{"size":2736,"mtime":1665807582920,"results":"40","hashOfConfig":"23"},{"size":497,"mtime":1665855544456,"results":"41","hashOfConfig":"23"},{"size":592,"mtime":1665855543701,"results":"42","hashOfConfig":"23"},{"size":519,"mtime":1665855957149,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14tst5d",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\index.js",[],["93","94"],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\App.js",["95"],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\store\\index.js",["96","97","98","99","100","101","102","103","104","105","106"],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\index.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\common\\jsTPS.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\api\\index.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\Banner.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditToolbar.js",["107"],"import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n\r\n    let enabledButtonClass = \"playlister-button\";\r\n    let disabledButtonClass = \"playlister-button-disabled\";\r\n    //store.disableButton('add-song-button');\r\n    //store.disableButton(\"undo-button\");\r\n    //store.disableButton(\"redo-button\");\r\n   // store.disableButton(\"close-button\");\r\n\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    function handleClose() {\r\n        store.disableButton('add-song-button');\r\n        store.disableButton('close-button');\r\n        store.disableButton('undo-button');\r\n        store.disableButton('redo-button');\r\n\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n    } \r\n    function handleAddSong()\r\n    {\r\n            store.addAddSongTransaction();\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    return (\r\n        <span id=\"edit-toolbar\">\r\n            <input\r\n                type=\"button\"\r\n                id='add-song-button'\r\n                disabled={editStatus}\r\n                value=\"+\"\r\n                className={disabledButtonClass}\r\n                onClick={handleAddSong}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='undo-button'\r\n                disabled={editStatus}\r\n                value=\"⟲\"\r\n                className={disabledButtonClass}\r\n                onClick={handleUndo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='redo-button'\r\n                disabled={editStatus}\r\n                value=\"⟳\"\r\n                className={disabledButtonClass}\r\n                onClick={handleRedo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='close-button'\r\n                disabled={editStatus}\r\n                value=\"&#x2715;\"\r\n                className={disabledButtonClass}\r\n                onClick={handleClose}\r\n            />\r\n        </span>);\r\n}\r\n\r\nexport default EditToolbar;","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\ListCard.js",["108","109","110"],"import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\n// import { DeleteListModal } from 'Playlister_HW3\\client\\src\\components\\DeleteListModal.js'\r\n\r\n/*\r\n    This is a card in our list of playlists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction ListCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [ deleteActive, setDeleteActive ] = useState(false);\r\n    const [ text, setText ] = useState(\"\");\r\n    store.history = useHistory();\r\n    const { idNamePair, selected } = props;\r\n\r\n    function handleLoadList(event) {\r\n        if (!event.target.disabled) {\r\n            let _id = event.target.id;\r\n            if (_id.indexOf('list-card-text-') >= 0)\r\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\r\n\r\n            // CHANGE THE CURRENT LIST\r\n            store.setCurrentList(_id);\r\n            store.enableButton('add-song-button');\r\n            store.enableButton('close-button');   \r\n        }\r\n    }\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsListNameEditActive();\r\n        }\r\n        setEditActive(newActive);  \r\n    }\r\n\r\n\r\n    function toggleDelete(event)\r\n    {\r\n        event.stopPropagation();\r\n        document.getElementById(\"delete-list-modal\").classList.add(\"is-visible\");\r\n        let newActive = !deleteActive;\r\n        let id = event.target.id.substring(\"list-\".length);\r\n        id = id.substring(7, id.length);\r\n        if (newActive) {\r\n           store.setIsListDeleteActive(id);\r\n        }\r\n        //setDeleteActive(newActive);  \r\n       // handleDeleteList(id);\r\n    }\r\n\r\n    function handleDeleteList(id)\r\n    {\r\n        store.deletePlaylist(id);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            if(text == \"\")\r\n            {\r\n                toggleEdit();\r\n            }\r\n            else\r\n            {\r\n                store.changeListName(id, text);\r\n                toggleEdit();\r\n            }\r\n        }\r\n    }\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value );\r\n    }\r\n\r\n    let selectClass = \"unselected-list-card\";\r\n    if (selected) {\r\n        selectClass = \"selected-list-card\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement =\r\n        <div\r\n            id={idNamePair._id}\r\n            key={idNamePair._id}\r\n            onClick={handleLoadList}\r\n            className={'list-card ' + selectClass}>\r\n            <span\r\n                id={\"list-card-text-\" + idNamePair._id}\r\n                key={\"span-\" + idNamePair._id}\r\n                className=\"list-card-text\">\r\n                {idNamePair.name}\r\n            </span>\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"delete-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={toggleDelete}\r\n                value={\"\\u2715\"}\r\n            />\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"edit-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n        </div>;\r\n\r\n    if (editActive) {\r\n        cardElement =\r\n            <input\r\n                id={\"list-\" + idNamePair._id}\r\n                className='list-card'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={idNamePair.name}\r\n            />;\r\n    }\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default ListCard;","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\ListSelector.js",["111"],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\Statusbar.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteListModal.js",["112","113"],"import React, { Component } from 'react';\r\nimport { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction DeleteListModal()\r\n{\r\n    const { store } = useContext(GlobalStoreContext);\r\n    store.history = useHistory();\r\n    if(store.listToDeleteName != null)\r\n    {\r\n    function cancelD()\r\n    {\r\n        document.getElementById(\"delete-list-modal\").classList.remove(\"is-visible\");\r\n    }\r\n\r\n    function confirmD()\r\n    {\r\n        document.getElementById(\"delete-list-modal\").classList.remove(\"is-visible\");\r\n        store.deletePlaylist(store.listToDeleteId);\r\n    }\r\n\r\n        return (\r\n            <div \r\n                className=\"modal\"  \r\n                id=\"delete-list-modal\" \r\n                data-animation=\"slideInOutLeft\">\r\n                    <div className=\"modal-root\" id='verify-delete-list-root'>\r\n                        <div className=\"modal-north\">\r\n                            Delete playlist? \r\n                        </div>\r\n                        <div className=\"modal-center\">\r\n                            <div className=\"modal-center-content\">\r\n                                Are you sure you wish to permanently delete the <span className=\"dModalName\">{store.listToDeleteName}</span> playlist?\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-south\">\r\n                            <input type=\"button\" \r\n                                id=\"delete-list-confirm-button\" \r\n                                className=\"modal-button\" \r\n                                onClick = {confirmD}\r\n                                value='Confirm' />\r\n                            <input type=\"button\" \r\n                                id=\"delete-list-cancel-button\" \r\n                                className=\"modal-button\" \r\n                                onClick = {cancelD}\r\n                                value='Cancel' />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div \r\n            className=\"modal\"  \r\n            id=\"delete-list-modal\" \r\n            data-animation=\"slideInOutLeft\">\r\n                <div className=\"modal-root\" id='verify-delete-list-root'>\r\n                    <div className=\"modal-north\">\r\n                        Delete playlist? \r\n                    </div>\r\n                    <div className=\"modal-center\">\r\n                        <div className=\"modal-center-content\">\r\n                            Are you sure you wish to permanently delete the <span className=\"dModalName\">{}</span> playlist?\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-south\">\r\n                        <input type=\"button\" \r\n                            id=\"delete-list-confirm-button\" \r\n                            className=\"modal-button\" \r\n                            value='Confirm' />\r\n                        <input type=\"button\" \r\n                            id=\"delete-list-cancel-button\" \r\n                            className=\"modal-button\" \r\n                            value='Cancel' />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteListModal;\r\n\r\n ","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\SongCard.js",["114"],"import React, { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction SongCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    function handleDeleteClick(event)\r\n    {\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        store.setSongDe(targetId);\r\n        store.disableButton('add-song-button');\r\n        store.disableButton('close-button');\r\n        store.disableButton('undo-button');\r\n        store.disableButton('redo-button');\r\n        document.getElementById(\"delete-song-modal\").classList.add(\"is-visible\");\r\n    }\r\n\r\n    function handleEditSong(event)\r\n    {\r\n        store.disableButton('add-song-button');\r\n        store.disableButton('close-button');\r\n        store.disableButton('undo-button');\r\n        store.disableButton('redo-button');\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        document.getElementById(\"edit-song-modal\").classList.add(\"is-visible\");\r\n        store.setSongEdit(targetId);\r\n    }\r\n\r\n\r\n  function handleDragStart (event){\r\n        event.dataTransfer.setData(\"song\", event.target.id);\r\n        store.handleMove(true, false);\r\n    }\r\n\r\n   function handleDragOver (event) {\r\n        event.preventDefault();\r\n        store.handleMove(false, true);\r\n    }\r\n\r\n    function handleDragEnter (event) {\r\n        event.preventDefault();\r\n        store.handleMove(false, true);\r\n    }\r\n\r\n   function handleDragLeave (event) {\r\n        event.preventDefault();\r\n        store.handleMove(false, false);\r\n    }\r\n\r\n   function handleDrop (event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"song\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        \r\n        store.handleMove(false, false);\r\n\r\n        // ASK THE MODEL TO MOVE THE DATA\r\n        store.addMoveSongTransaction(sourceId, targetId);\r\n        //store.moveCallback(sourceId, targetId);\r\n    }\r\n\r\n\r\n\r\n    const { song, index } = props;\r\n    let cardClass = \"list-card unselected-list-card\";\r\n    return (\r\n        <div\r\n            key={index}\r\n            id={'song-' + index + '-card'}\r\n            className={cardClass}\r\n            onDoubleClick={handleEditSong}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable = \"true\"\r\n        >\r\n            {index + 1}. \r\n            <a\r\n                id={'song-' + index + '-link'}\r\n                className=\"song-link\"\r\n                href={\"https://www.youtube.com/watch?v=\" + song.youTubeId}>\r\n                {song.title} by {song.artist}\r\n            </a>\r\n            <input\r\n                type=\"button\"\r\n                id={\"remove-song-\" + index}\r\n                className=\"list-card-button\"\r\n                onClick={handleDeleteClick}\r\n                value={\"\\u2715\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongCard;","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\AddSong_Transaction.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\PlaylistCards.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditSongModal.js",["115","116","117","118","119"],"import React, { Component } from 'react';\r\nimport { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction EditSongModal()\r\n{\r\n    const { store } = useContext(GlobalStoreContext);\r\n    store.history = useHistory();\r\n\r\n    let title = \"\";\r\n    let artist = \"\";\r\n    let yID = \"\";\r\n\r\n    function confirmE ()\r\n    {\r\n        store.enableButton('add-song-button');\r\n        store.enableButton('close-button');\r\n\r\n        if(store.canUndo())\r\n        {\r\n            store.enableButton('undo-button');\r\n        }\r\n        if(store.canRedo())\r\n        {\r\n            store.enableButton('redo-button');\r\n        }\r\n        store.addEditSongTransaction();\r\n        document.getElementById(\"edit-song-modal\").classList.remove(\"is-visible\");\r\n    }\r\n\r\n    function cancelE ()\r\n    {\r\n        store.enableButton('add-song-button');\r\n        store.enableButton('close-button');\r\n\r\n        if(store.canUndo())\r\n        {\r\n            store.enableButton('undo-button');\r\n        }\r\n        if(store.canRedo())\r\n        {\r\n            store.enableButton('redo-button');\r\n        }\r\n        document.getElementById(\"edit-song-modal\").classList.remove(\"is-visible\");\r\n    }\r\n      \r\n        return (\r\n            <div \r\n                className=\"modal\" \r\n                id=\"edit-song-modal\" \r\n                data-animation=\"slideInOutLeft\">\r\n                    <div className=\"modal-root\" id='verify-edit-song-root'>\r\n                        <div className=\"modal-north\">\r\n                            Edit Song\r\n                        </div>\r\n                        <div className=\"modal-center\">\r\n                            <div className=\"modal-center-content\">\r\n                            <div className=\"editTexts\">\r\n                            Title: \r\n                            <input className = \"text-box\" type=\"text\" id=\"edit-song-title\" placeholder=\"\"/>\r\n                        <br></br>\r\n                        Artist:\r\n                        <input className = \"text-box\" type=\"text\" id=\"edit-song-artist\" placeholder=\"\"/>\r\n                        <br></br>\r\n                        YouTubeId:\r\n                        <input className = \"text-box\" type=\"text\" id=\"edit-song-ytid\" placeholder=\"\"/>\r\n                    </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-south\">\r\n                            <input type=\"button\" \r\n                                id=\"edit-song-confirm-button\" \r\n                                className=\"modal-button\" \r\n                                onClick={confirmE}\r\n                                value='Confirm' />\r\n                            <input type=\"button\" \r\n                                id=\"edit-song-cancel-button\" \r\n                                className=\"modal-button\" \r\n                                onClick={cancelE}\r\n                                value='Cancel' />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default EditSongModal;\r\n\r\n ","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteSongModal.js",["120","121"],"import React, { Component } from 'react';\r\nimport { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction DeleteSongModal()\r\n{\r\n    const { store } = useContext(GlobalStoreContext);\r\n    store.history = useHistory();\r\n   \r\n    function cancelD()\r\n    {\r\n        document.getElementById(\"delete-song-modal\").classList.remove(\"is-visible\");\r\n        store.enableButton('add-song-button');\r\n        store.enableButton('close-button');\r\n\r\n        if(store.canUndo())\r\n        {\r\n            store.enableButton('undo-button');\r\n        }\r\n        if(store.canRedo())\r\n        {\r\n            store.enableButton('redo-button');\r\n        }\r\n    }\r\n\r\n    function confirmD()\r\n    {\r\n        document.getElementById(\"delete-song-modal\").classList.remove(\"is-visible\");\r\n        store.addDeleteSongTransaction(store.deleteSongid);\r\n        store.enableButton('add-song-button');\r\n        store.enableButton('add-song-button');\r\n        store.enableButton('close-button');\r\n\r\n        if(store.canUndo())\r\n        {\r\n            store.enableButton('undo-button');\r\n        }\r\n        if(store.canRedo())\r\n        {\r\n            store.enableButton('redo-button');\r\n        }\r\n    }\r\n        return (\r\n            <div \r\n                className=\"modal\"  \r\n                id=\"delete-song-modal\" \r\n                data-animation=\"slideInOutLeft\">\r\n                    <div className=\"modal-root\" id='verify-delete-list-root'>\r\n                        <div className=\"modal-north\">\r\n                            Remove song? \r\n                        </div>\r\n                        <div className=\"modal-center\">\r\n                            <div className=\"modal-center-content\">\r\n                                Are you sure you wish to permanently delete the <span className=\"dModalName\">{store.deleteSongName}</span> song from the playlist?\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-south\">\r\n                            <input type=\"button\" \r\n                                id=\"delete-list-confirm-button\" \r\n                                className=\"modal-button\" \r\n                                onClick = {confirmD}\r\n                                value='Confirm' />\r\n                            <input type=\"button\" \r\n                                id=\"delete-list-cancel-button\" \r\n                                className=\"modal-button\" \r\n                                onClick = {cancelD}\r\n                                value='Cancel' />\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default DeleteSongModal;\r\n\r\n ","C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\DeleteSong_Transaction.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\EditSong_Transaction.js",[],"C:\\Users\\alexa\\OneDrive\\Desktop\\CSE 316\\Playlister_HW3\\Playlister_HW3\\client\\src\\components\\MoveSong_Transaction.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":13,"nodeType":"128","messageId":"129","endLine":13,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":3,"column":15,"nodeType":"128","messageId":"129","endLine":3,"endColumn":33},{"ruleId":"126","severity":1,"message":"131","line":3,"column":36,"nodeType":"128","messageId":"129","endLine":3,"endColumn":51},{"ruleId":"126","severity":1,"message":"132","line":535,"column":37,"nodeType":"128","messageId":"129","endLine":535,"endColumn":47},{"ruleId":"126","severity":1,"message":"133","line":561,"column":25,"nodeType":"128","messageId":"129","endLine":561,"endColumn":33},{"ruleId":"126","severity":1,"message":"132","line":679,"column":37,"nodeType":"128","messageId":"129","endLine":679,"endColumn":47},{"ruleId":"126","severity":1,"message":"132","line":714,"column":37,"nodeType":"128","messageId":"129","endLine":714,"endColumn":47},{"ruleId":"126","severity":1,"message":"132","line":745,"column":37,"nodeType":"128","messageId":"129","endLine":745,"endColumn":47},{"ruleId":"126","severity":1,"message":"134","line":765,"column":17,"nodeType":"128","messageId":"129","endLine":765,"endColumn":21},{"ruleId":"126","severity":1,"message":"132","line":790,"column":37,"nodeType":"128","messageId":"129","endLine":790,"endColumn":47},{"ruleId":"126","severity":1,"message":"132","line":822,"column":37,"nodeType":"128","messageId":"129","endLine":822,"endColumn":47},{"ruleId":"126","severity":1,"message":"132","line":854,"column":38,"nodeType":"128","messageId":"129","endLine":854,"endColumn":48},{"ruleId":"126","severity":1,"message":"135","line":14,"column":9,"nodeType":"128","messageId":"129","endLine":14,"endColumn":27},{"ruleId":"126","severity":1,"message":"136","line":17,"column":27,"nodeType":"128","messageId":"129","endLine":17,"endColumn":42},{"ruleId":"126","severity":1,"message":"137","line":63,"column":14,"nodeType":"128","messageId":"129","endLine":63,"endColumn":30},{"ruleId":"138","severity":1,"message":"139","line":71,"column":21,"nodeType":"140","messageId":"141","endLine":71,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":17,"column":8,"nodeType":"144","endLine":17,"endColumn":10,"suggestions":"145"},{"ruleId":"126","severity":1,"message":"146","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"147","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"126","severity":1,"message":"147","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"146","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"147","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"126","severity":1,"message":"148","line":11,"column":9,"nodeType":"128","messageId":"129","endLine":11,"endColumn":14},{"ruleId":"126","severity":1,"message":"149","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":12,"endColumn":15},{"ruleId":"126","severity":1,"message":"150","line":13,"column":9,"nodeType":"128","messageId":"129","endLine":13,"endColumn":12},{"ruleId":"126","severity":1,"message":"146","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"147","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","'updatePlaylistById' is defined but never used.","'updateSongsById' is defined but never used.","'pairsArray' is assigned a value but never used.","'playlist' is assigned a value but never used.","'pame' is assigned a value but never used.","'enabledButtonClass' is assigned a value but never used.","'setDeleteActive' is assigned a value but never used.","'handleDeleteList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'Component' is defined but never used.","'useState' is defined but never used.","'title' is assigned a value but never used.","'artist' is assigned a value but never used.","'yID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [store]",{"range":"156","text":"157"},[500,502],"[store]"]